
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/uart/src/uart_tx.v
Parsing SystemVerilog input from `/openLANE_flow/designs/uart/src/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/uart/src/uart_baud_generator.v
Parsing SystemVerilog input from `/openLANE_flow/designs/uart/src/uart_baud_generator.v' to AST representation.
Generating RTLIL representation for module `\uart_baud_generator'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/uart/src/uart_rx.v
Parsing SystemVerilog input from `/openLANE_flow/designs/uart/src/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/uart/src/uart_top_module.v
Parsing SystemVerilog input from `/openLANE_flow/designs/uart/src/uart_top_module.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

5. Generating Graphviz representation of design.
Writing dot description to `/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/hierarchy.dot'.
Dumping module uart to page 1.

6. Executing HIERARCHY pass (managing design hierarchy).

6.1. Analyzing design hierarchy..
Top module:  \uart
Used module:     \uart_tx
Used module:         \uart_baud_generator
Used module:     \uart_rx

6.2. Analyzing design hierarchy..
Top module:  \uart
Used module:     \uart_tx
Used module:         \uart_baud_generator
Used module:     \uart_rx
Removed 0 unused modules.

7. Executing TRIBUF pass.

8. Executing SYNTH pass.

8.1. Executing HIERARCHY pass (managing design hierarchy).

8.1.1. Analyzing design hierarchy..
Top module:  \uart
Used module:     \uart_tx
Used module:         \uart_baud_generator
Used module:     \uart_rx

8.1.2. Analyzing design hierarchy..
Top module:  \uart
Used module:     \uart_tx
Used module:         \uart_baud_generator
Used module:     \uart_rx
Removed 0 unused modules.

8.2. Executing PROC pass (convert processes to netlists).

8.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 9 switch rules as full_case in process $proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22 in module uart_rx.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13 in module uart_baud_generator.
Marked 7 switch rules as full_case in process $proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1 in module uart_tx.
Removed a total of 0 dead cases.

8.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 14 assignments to connections.

8.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:20$51'.
  Set init value: \next_state = 3'000
Found init rule in `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:6$17'.
  Set init value: \acc = 10'0000000000
Found init rule in `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:11$12'.
  Set init value: \next_state = 3'000
Found init rule in `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:10$11'.
  Set init value: \transmitted_bit_index = 3'000

8.2.5. Executing PROC_ARST pass (detect async resets in processes).

8.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:20$51'.
Creating decoders for process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
     1/14: $3\flag[0:0]
     2/14: $2\flag[0:0]
     3/14: $3$lookahead\RBR$21[7:0]$39
     4/14: $3$bitselwrite$data$/openLANE_flow/designs/uart/src/uart_rx.v:67$19[7:0]$38
     5/14: $3$bitselwrite$mask$/openLANE_flow/designs/uart/src/uart_rx.v:67$18[7:0]$37
     6/14: $2$lookahead\RBR$21[7:0]$35
     7/14: $2$bitselwrite$data$/openLANE_flow/designs/uart/src/uart_rx.v:67$19[7:0]$34
     8/14: $2$bitselwrite$mask$/openLANE_flow/designs/uart/src/uart_rx.v:67$18[7:0]$33
     9/14: $1$lookahead\RBR$21[7:0]$28
    10/14: $1$bitselwrite$data$/openLANE_flow/designs/uart/src/uart_rx.v:67$19[7:0]$27
    11/14: $1$bitselwrite$mask$/openLANE_flow/designs/uart/src/uart_rx.v:67$18[7:0]$26
    12/14: $1\flag[0:0]
    13/14: $0\recieved_bit_index[2:0]
    14/14: $0\next_state[2:0]
Creating decoders for process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:29$20'.
Creating decoders for process `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:6$17'.
Creating decoders for process `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13'.
     1/2: $1\acc[9:0]
     2/2: $0\tick[3:0]
Creating decoders for process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:11$12'.
Creating decoders for process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:10$11'.
Creating decoders for process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:6$10'.
Creating decoders for process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
     1/8: $6\UARTn_TXD[0:0]
     2/8: $5\UARTn_TXD[0:0]
     3/8: $4\UARTn_TXD[0:0]
     4/8: $3\UARTn_TXD[0:0]
     5/8: $2\UARTn_TXD[0:0]
     6/8: $1\UARTn_TXD[0:0]
     7/8: $0\next_state[2:0]
     8/8: $0\transmitted_bit_index[2:0]

8.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\uart_tx.\THR' from process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:6$10'.

8.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\uart_rx.\next_state' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$277' with positive edge clock.
Creating register for signal `\uart_rx.\RBR' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$278' with positive edge clock.
Creating register for signal `\uart_rx.\flag' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$279' with positive edge clock.
Creating register for signal `\uart_rx.\recieved_bit_index' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$280' with positive edge clock.
Creating register for signal `\uart_rx.$bitselwrite$mask$/openLANE_flow/designs/uart/src/uart_rx.v:67$18' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$281' with positive edge clock.
Creating register for signal `\uart_rx.$bitselwrite$data$/openLANE_flow/designs/uart/src/uart_rx.v:67$19' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$282' with positive edge clock.
Creating register for signal `\uart_rx.$lookahead\RBR$21' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
  created $dff cell `$procdff$283' with positive edge clock.
Creating register for signal `\uart_rx.\data_in_recieved' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:29$20'.
  created $dff cell `$procdff$284' with positive edge clock.
Creating register for signal `\uart_rx.\data_in' using process `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:29$20'.
  created $dff cell `$procdff$285' with positive edge clock.
Creating register for signal `\uart_baud_generator.\tick' using process `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13'.
  created $dff cell `$procdff$286' with positive edge clock.
Creating register for signal `\uart_baud_generator.\acc' using process `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13'.
  created $dff cell `$procdff$287' with positive edge clock.
Creating register for signal `\uart_tx.\UARTn_TXD' using process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
  created $dff cell `$procdff$288' with positive edge clock.
Creating register for signal `\uart_tx.\transmitted_bit_index' using process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
  created $dff cell `$procdff$289' with positive edge clock.
Creating register for signal `\uart_tx.\next_state' using process `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
  created $dff cell `$procdff$290' with positive edge clock.

8.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:20$51'.
Found and cleaned up 9 empty switches in `\uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
Removing empty process `uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:38$22'.
Removing empty process `uart_rx.$proc$/openLANE_flow/designs/uart/src/uart_rx.v:29$20'.
Removing empty process `uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:6$17'.
Found and cleaned up 1 empty switch in `\uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13'.
Removing empty process `uart_baud_generator.$proc$/openLANE_flow/designs/uart/src/uart_baud_generator.v:15$13'.
Removing empty process `uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:11$12'.
Removing empty process `uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:10$11'.
Removing empty process `uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:6$10'.
Found and cleaned up 7 empty switches in `\uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
Removing empty process `uart_tx.$proc$/openLANE_flow/designs/uart/src/uart_tx.v:22$1'.
Cleaned up 17 empty switches.

8.3. Executing FLATTEN pass (flatten design).
Deleting now unused module uart_rx.
Deleting now unused module uart_baud_generator.
Deleting now unused module uart_tx.
<suppressed ~4 debug messages>

8.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~8 debug messages>

8.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 85 unused cells and 168 unused wires.
<suppressed ~94 debug messages>

8.6. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 1 problems.

8.7. Executing OPT pass (performing simple optimizations).

8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$213.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$215.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$223.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$232.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$197.
    dead port 2/2 on $mux $flatten\tx_inst.$procmux$204.
Removed 6 multiplexer ports.
<suppressed ~5 debug messages>

8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.7.6. Executing OPT_DFF pass (perform DFF optimizations).

8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\tx_inst.$procmux$235: { $flatten\tx_inst.$procmux$240_CMP $flatten\tx_inst.$procmux$233_CMP $flatten\tx_inst.$procmux$216_CMP $auto$opt_reduce.cc:134:opt_mux$292 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.7.23. Finished OPT passes. (There is nothing left to do.)

8.8. Executing FSM pass (extract and optimize FSM).

8.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking uart.tx_inst.next_state as FSM state register:
    Register has an initialization value.

8.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.9. Executing OPT pass (performing simple optimizations).

8.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

8.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\tx_inst.\u1_tx.$procdff$287 ($dff) from module uart (D = $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:24$16_Y, Q = \tx_inst.u1_tx.acc, rval = 10'0000000000).
Adding EN signal on $flatten\tx_inst.\u1_tx.$procdff$286 ($dff) from module uart (D = $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:20$15_Y, Q = \tx_inst.u1_tx.tick).
Adding EN signal on $flatten\tx_inst.$procdff$290 ($dff) from module uart (D = $flatten\tx_inst.$0\next_state[2:0], Q = \tx_inst.next_state).
Adding EN signal on $flatten\tx_inst.$procdff$289 ($dff) from module uart (D = $flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6_Y [2:0], Q = \tx_inst.transmitted_bit_index).
Adding EN signal on $flatten\tx_inst.$procdff$288 ($dff) from module uart (D = $flatten\tx_inst.$0\UARTn_TXD[0:0], Q = \tx_inst.UARTn_TXD).

8.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

8.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2 debug messages>

8.9.9. Rerunning OPT passes. (Maybe there is more to do..)

8.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

8.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.9.13. Executing OPT_DFF pass (perform DFF optimizations).

8.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.9.16. Finished OPT passes. (There is nothing left to do.)

8.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell uart.$auto$opt_dff.cc:218:make_patterns_logic$310 ($ne).
Removed top 1 bits (of 2) from port B of cell uart.$auto$opt_dff.cc:218:make_patterns_logic$308 ($ne).
Removed top 1 bits (of 2) from port B of cell uart.$auto$opt_dff.cc:218:make_patterns_logic$304 ($ne).
Removed top 3 bits (of 4) from port B of cell uart.$flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:20$15 ($add).
Removed top 8 bits (of 9) from port B of cell uart.$flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:24$16 ($add).
Removed top 2 bits (of 3) from mux cell uart.$flatten\tx_inst.$procmux$263 ($mux).
Removed top 1 bits (of 3) from mux cell uart.$flatten\tx_inst.$procmux$259 ($mux).
Removed top 2 bits (of 3) from mux cell uart.$flatten\tx_inst.$procmux$253 ($mux).
Removed top 2 bits (of 3) from port B of cell uart.$flatten\tx_inst.$procmux$233_CMP0 ($eq).
Removed cell uart.$flatten\tx_inst.$procmux$230 ($mux).
Removed cell uart.$flatten\tx_inst.$procmux$221 ($mux).
Removed top 1 bits (of 3) from port B of cell uart.$flatten\tx_inst.$procmux$216_CMP0 ($eq).
Removed cell uart.$flatten\tx_inst.$procmux$211 ($mux).
Removed top 1 bits (of 3) from port B of cell uart.$flatten\tx_inst.$procmux$205_CMP0 ($eq).
Removed cell uart.$flatten\tx_inst.$procmux$195 ($mux).
Removed top 31 bits (of 32) from port B of cell uart.$flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6 ($add).
Removed top 29 bits (of 32) from port Y of cell uart.$flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6 ($add).
Removed top 29 bits (of 32) from wire uart.$flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6_Y.
Removed top 2 bits (of 3) from wire uart.$flatten\tx_inst.$procmux$253_Y.
Removed top 1 bits (of 3) from wire uart.$flatten\tx_inst.$procmux$259_Y.
Removed top 2 bits (of 3) from wire uart.$flatten\tx_inst.$procmux$263_Y.

8.11. Executing PEEPOPT pass (run peephole optimizers).

8.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

8.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module uart:
  creating $macc model for $flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6 ($add).
  creating $macc model for $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:20$15 ($add).
  creating $macc model for $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:24$16 ($add).
  creating $alu model for $macc $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:24$16.
  creating $alu model for $macc $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:20$15.
  creating $alu model for $macc $flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6.
  creating $alu model for $flatten\tx_inst.$le$/openLANE_flow/designs/uart/src/uart_tx.v:48$4 ($le): new $alu
  creating $alu cell for $flatten\tx_inst.$le$/openLANE_flow/designs/uart/src/uart_tx.v:48$4: $auto$alumacc.cc:485:replace_alu$319
  creating $alu cell for $flatten\tx_inst.$add$/openLANE_flow/designs/uart/src/uart_tx.v:51$6: $auto$alumacc.cc:485:replace_alu$328
  creating $alu cell for $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:20$15: $auto$alumacc.cc:485:replace_alu$331
  creating $alu cell for $flatten\tx_inst.\u1_tx.$add$/openLANE_flow/designs/uart/src/uart_baud_generator.v:24$16: $auto$alumacc.cc:485:replace_alu$334
  created 4 $alu and 0 $macc cells.

8.14. Executing SHARE pass (SAT-based resource sharing).

8.15. Executing OPT pass (performing simple optimizations).

8.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

8.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\tx_inst.$procmux$235: { $flatten\tx_inst.$procmux$233_CMP $flatten\tx_inst.$procmux$216_CMP $auto$opt_reduce.cc:134:opt_mux$338 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$337: { $flatten\tx_inst.$procmux$198_CMP $flatten\tx_inst.$procmux$205_CMP $flatten\tx_inst.$procmux$240_CMP }
  Optimizing cells in module \uart.
Performed a total of 2 changes.

8.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.15.6. Executing OPT_DFF pass (perform DFF optimizations).

8.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.15.9. Rerunning OPT passes. (Maybe there is more to do..)

8.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

8.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.15.13. Executing OPT_DFF pass (perform DFF optimizations).

8.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.15.16. Finished OPT passes. (There is nothing left to do.)

8.16. Executing MEMORY pass.

8.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

8.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).

8.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.18. Executing OPT pass (performing simple optimizations).

8.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~19 debug messages>

8.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.18.3. Executing OPT_DFF pass (perform DFF optimizations).

8.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.18.5. Finished fast OPT passes.

8.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

8.20. Executing OPT pass (performing simple optimizations).

8.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

8.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    Consolidated identical input bits for $mux cell $flatten\tx_inst.$procmux$243:
      Old ports: A=3'100, B=3'000, Y=$flatten\tx_inst.$procmux$243_Y
      New ports: A=1'1, B=1'0, Y=$flatten\tx_inst.$procmux$243_Y [2]
      New connections: $flatten\tx_inst.$procmux$243_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\tx_inst.$procmux$248:
      Old ports: A=3'011, B=3'100, Y=$flatten\tx_inst.$procmux$248_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\tx_inst.$procmux$248_Y [2] $flatten\tx_inst.$procmux$248_Y [0] }
      New connections: $flatten\tx_inst.$procmux$248_Y [1] = $flatten\tx_inst.$procmux$248_Y [0]
    Consolidated identical input bits for $mux cell $flatten\tx_inst.$procmux$255:
      Old ports: A=3'010, B={ 2'01 $auto$wreduce.cc:454:run$315 [0] }, Y=$flatten\tx_inst.$procmux$255_Y
      New ports: A=1'0, B=$auto$wreduce.cc:454:run$315 [0], Y=$flatten\tx_inst.$procmux$255_Y [0]
      New connections: $flatten\tx_inst.$procmux$255_Y [2:1] = 2'01
  Optimizing cells in module \uart.
Performed a total of 3 changes.

8.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.20.6. Executing OPT_SHARE pass.

8.20.7. Executing OPT_DFF pass (perform DFF optimizations).

8.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2 debug messages>

8.20.10. Rerunning OPT passes. (Maybe there is more to do..)

8.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

8.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

8.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.20.14. Executing OPT_SHARE pass.

8.20.15. Executing OPT_DFF pass (perform DFF optimizations).

8.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

8.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.20.18. Finished OPT passes. (There is nothing left to do.)

8.21. Executing TECHMAP pass (map to technology primitives).

8.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:dad9b3e4d853a0c9c26ac1996e420707d5d63a68$paramod$da4b7a069bab2d2cb126ab511d2c5f5d67aa4129\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~723 debug messages>

8.22. Executing OPT pass (performing simple optimizations).

8.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~180 debug messages>

8.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

8.22.3. Executing OPT_DFF pass (perform DFF optimizations).

8.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 25 unused cells and 226 unused wires.
<suppressed ~26 debug messages>

8.22.5. Finished fast OPT passes.

8.23. Executing ABC pass (technology mapping using ABC).

8.23.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 116 gates and 138 wires to a netlist network with 21 inputs and 25 outputs.

8.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

8.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       26
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       19
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              XNOR cells:        5
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       92
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       25
Removing temp directory.

8.24. Executing OPT pass (performing simple optimizations).

8.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

8.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

8.24.3. Executing OPT_DFF pass (perform DFF optimizations).

8.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 108 unused wires.
<suppressed ~1 debug messages>

8.24.5. Finished fast OPT passes.

8.25. Executing HIERARCHY pass (managing design hierarchy).

8.25.1. Analyzing design hierarchy..
Top module:  \uart

8.25.2. Analyzing design hierarchy..
Top module:  \uart
Removed 0 unused modules.

8.26. Printing statistics.

=== uart ===

   Number of wires:                 96
   Number of wire bits:            161
   Number of public wires:          22
   Number of public wire bits:      59
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $_ANDNOT_                      26
     $_AND_                          1
     $_DFFE_PN_                      4
     $_DFFE_PP_                      7
     $_MUX_                          5
     $_NAND_                         8
     $_NOR_                          2
     $_NOT_                          4
     $_ORNOT_                        9
     $_OR_                          19
     $_SDFF_PN0_                    10
     $_XNOR_                         5
     $_XOR_                          9

8.27. Executing CHECK pass (checking for obvious problems).
checking module uart..
found and reported 0 problems.

9. Executing SHARE pass (SAT-based resource sharing).

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

10.6. Executing OPT_DFF pass (perform DFF optimizations).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 13 unused wires.
<suppressed ~13 debug messages>

12. Printing statistics.

=== uart ===

   Number of wires:                 83
   Number of wire bits:            127
   Number of public wires:           9
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $_ANDNOT_                      26
     $_AND_                          1
     $_DFFE_PN_                      4
     $_DFFE_PP_                      7
     $_MUX_                          5
     $_NAND_                         8
     $_NOR_                          2
     $_NOT_                          4
     $_ORNOT_                        9
     $_OR_                          19
     $_SDFF_PN0_                    10
     $_XNOR_                         5
     $_XOR_                          9

mapping tbuf

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

14. Executing SIMPLEMAP pass (map simple cells to gate primitives).

15. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module uart..
  Treeifying 5 MUXes:
    Found tree with 1 MUXes at root $flatten\tx_inst.$procmux$245.Y [0].
    Found tree with 1 MUXes at root $flatten\tx_inst.$procmux$245.Y [2].
    Found tree with 1 MUXes at root $abc$1041$new_n52_.
    Found tree with 1 MUXes at root $abc$1041$new_n94_.
    Found tree with 1 MUXes at root $abc$1041$new_n91_.
    Finished treeification: Found 5 trees.
  Covering trees:
    Replaced tree at $flatten\tx_inst.$procmux$245.Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\tx_inst.$procmux$245.Y [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$1041$new_n52_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$1041$new_n94_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $abc$1041$new_n91_: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 0 decoder MUXes.
<suppressed ~86 debug messages>

16. Executing TECHMAP pass (map to technology primitives).

16.1. Executing Verilog-2005 frontend: /home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v
Parsing Verilog input from `/home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

16.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

17. Executing SIMPLEMAP pass (map simple cells to gate primitives).

18. Executing TECHMAP pass (map to technology primitives).

18.1. Executing Verilog-2005 frontend: /home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v
Parsing Verilog input from `/home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX_'.
Successfully finished Verilog frontend.

18.2. Continuing TECHMAP pass.
Using template \$_MUX_ for cells of type $_MUX_.
No more expansions possible.
<suppressed ~8 debug messages>

19. Executing SIMPLEMAP pass (map simple cells to gate primitives).

20. Executing TECHMAP pass (map to technology primitives).

20.1. Executing Verilog-2005 frontend: /home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/mariam/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

20.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

22. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

22.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\uart':
  mapped 21 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

23. Printing statistics.

=== uart ===

   Number of wires:                124
   Number of wire bits:            168
   Number of public wires:           9
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                130
     $_ANDNOT_                      26
     $_AND_                          1
     $_MUX_                         21
     $_NAND_                         8
     $_NOR_                          2
     $_NOT_                          4
     $_ORNOT_                        9
     $_OR_                          19
     $_XNOR_                         5
     $_XOR_                          9
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__mux2_1         5

[INFO]: ABC: WireLoad : S_0

24. Executing ABC pass (technology mapping using ABC).

24.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

24.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    7.77 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 6 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + map -p -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: + upsize -D 6660.0 
ABC: Current delay (1050.30 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    110 ( 25.5 %)   Cap = 11.8 ff (  5.1 %)   Area =      922.13 ( 72.7 %)   Delay =  1000.43 ps  (  9.1 %)               
ABC: Path  0 --       7 : 0    2 pi                         A =   0.00  Df =   8.9   -6.2 ps  S =  21.1 ps  Cin =  0.0 ff  Cout =   6.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     115 : 1    5 sky130_fd_sc_hd__buf_1     A =   3.75  Df = 182.0  -57.2 ps  S = 191.2 ps  Cin =  2.1 ff  Cout =  15.5 ff  Cmax = 130.0 ff  G =  705  
ABC: Path  2 --     116 : 1    5 sky130_fd_sc_hd__buf_1     A =   3.75  Df = 460.1 -147.1 ps  S = 285.0 ps  Cin =  2.1 ff  Cout =  23.7 ff  Cmax = 130.0 ff  G = 1075  
ABC: Path  3 --     135 : 4    1 sky130_fd_sc_hd__a2bb2oi_2 A =  15.01  Df =1000.4 -256.3 ps  S = 235.6 ps  Cin =  4.5 ff  Cout =  17.6 ff  Cmax = 130.0 ff  G =  389  
ABC: Start-point = pi6 (\tx_inst.next_state [1]).  End-point = po14 ($auto$rtlil.cc:2290:MuxGate$1147).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =   110  edge =    261  area =431.32  delay =635.34  lev = 7
ABC: + write_blif <abc-temp-dir>/output.blif 

24.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        2
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

25. Executing SETUNDEF pass (replace undef values with defined constants).

26. Executing HILOMAP pass (mapping to constant drivers).

27. Executing SPLITNETS pass (splitting up multi-bit signals).

28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

29. Executing INSBUF pass (insert buffer cells for connected wires).

30. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

31. Printing statistics.

=== uart ===

   Number of wires:                140
   Number of wire bits:            140
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                137
     sky130_fd_sc_hd__a21boi_2       1
     sky130_fd_sc_hd__a21oi_2        3
     sky130_fd_sc_hd__a2bb2oi_2      2
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31oi_2        3
     sky130_fd_sc_hd__a41oi_2        1
     sky130_fd_sc_hd__and2_2         2
     sky130_fd_sc_hd__and2b_2        1
     sky130_fd_sc_hd__and3_2         1
     sky130_fd_sc_hd__buf_1          9
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         19
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2        8
     sky130_fd_sc_hd__nand2b_2       1
     sky130_fd_sc_hd__nand3_2       10
     sky130_fd_sc_hd__nand3b_2       5
     sky130_fd_sc_hd__nor2_2        12
     sky130_fd_sc_hd__nor2b_2        1
     sky130_fd_sc_hd__nor3_2         9
     sky130_fd_sc_hd__nor3b_2        2
     sky130_fd_sc_hd__o2111ai_2      1
     sky130_fd_sc_hd__o21a_2         5
     sky130_fd_sc_hd__o21ai_2        2
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o22a_2         1
     sky130_fd_sc_hd__o2bb2ai_2      3
     sky130_fd_sc_hd__o32a_2         1
     sky130_fd_sc_hd__xnor2_2        3
     sky130_fd_sc_hd__xor2_2         2

   Chip area for module '\uart': 1428.870400

32. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_1

33. Executing ABC pass (technology mapping using ABC).

33.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

33.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    7.77 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 6 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + map -p -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + map 
ABC: + 
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: + upsize -D 6660.0 
ABC: Current delay (1010.81 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    122 ( 23.0 %)   Cap = 10.7 ff (  3.7 %)   Area =      877.09 ( 77.0 %)   Delay =   937.58 ps  ( 22.1 %)               
ABC: Path  0 --      16 : 0    2 pi                       A =   0.00  Df =   4.9   -3.4 ps  S =  16.6 ps  Cin =  0.0 ff  Cout =   3.7 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      57 : 1    5 sky130_fd_sc_hd__buf_1   A =   3.75  Df = 216.8  -73.6 ps  S = 249.7 ps  Cin =  2.1 ff  Cout =  20.7 ff  Cmax = 130.0 ff  G =  942  
ABC: Path  2 --      58 : 2    2 sky130_fd_sc_hd__or2b_2  A =   8.76  Df = 476.8  -80.9 ps  S =  69.9 ps  Cin =  1.6 ff  Cout =   9.2 ff  Cmax = 312.2 ff  G =  565  
ABC: Path  3 --      61 : 2    2 sky130_fd_sc_hd__nor2_2  A =   6.26  Df = 625.4 -179.6 ps  S = 125.1 ps  Cin =  4.4 ff  Cout =   9.0 ff  Cmax = 141.9 ff  G =  198  
ABC: Path  4 --     115 : 3    1 sky130_fd_sc_hd__nand3_2 A =  10.01  Df = 700.3 -203.9 ps  S =  70.8 ps  Cin =  4.4 ff  Cout =   4.5 ff  Cmax = 260.0 ff  G =   95  
ABC: Path  5 --     117 : 4    1 sky130_fd_sc_hd__a22oi_2 A =  12.51  Df = 937.6 -115.0 ps  S = 283.5 ps  Cin =  4.3 ff  Cout =  17.6 ff  Cmax = 170.3 ff  G =  412  
ABC: Start-point = pi15 (\tx_inst.u1_tx.acc [1]).  End-point = po11 ($auto$rtlil.cc:2290:MuxGate$1153).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =   122  edge =    284  area =421.27  delay =659.07  lev = 6
ABC: + write_blif <abc-temp-dir>/output.blif 

33.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

34. Executing SETUNDEF pass (replace undef values with defined constants).

35. Executing HILOMAP pass (mapping to constant drivers).

36. Executing SPLITNETS pass (splitting up multi-bit signals).

37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

38. Executing INSBUF pass (insert buffer cells for connected wires).

39. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

40. Printing statistics.

=== uart ===

   Number of wires:                152
   Number of wire bits:            152
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                149
     sky130_fd_sc_hd__a21o_2         3
     sky130_fd_sc_hd__a21oi_2        6
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__a22oi_2        3
     sky130_fd_sc_hd__a31o_2         3
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__a41oi_2        1
     sky130_fd_sc_hd__and2_2         1
     sky130_fd_sc_hd__and3_2         5
     sky130_fd_sc_hd__and4_2         2
     sky130_fd_sc_hd__buf_1          8
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         20
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2       25
     sky130_fd_sc_hd__nand3_2       11
     sky130_fd_sc_hd__nand3b_2       2
     sky130_fd_sc_hd__nor2_2        17
     sky130_fd_sc_hd__nor3_2         2
     sky130_fd_sc_hd__o211a_2        1
     sky130_fd_sc_hd__o21ai_2        2
     sky130_fd_sc_hd__o22ai_2        3
     sky130_fd_sc_hd__o2bb2a_2       1
     sky130_fd_sc_hd__o31ai_2        1
     sky130_fd_sc_hd__or2_2          1
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__or3_2          1

   Chip area for module '\uart': 1383.827200

41. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_2

42. Executing ABC pass (technology mapping using ABC).

42.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    7.77 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 6 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + map -p -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + map 
ABC: + 
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: + upsize -D 6660.0 
ABC: Current delay (960.36 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    113 ( 25.7 %)   Cap = 11.1 ff (  4.2 %)   Area =      839.56 ( 74.3 %)   Delay =   951.82 ps  ( 11.5 %)               
ABC: Path  0 --      20 : 0    2 pi                        A =   0.00  Df =   8.8   -6.1 ps  S =  21.0 ps  Cin =  0.0 ff  Cout =   6.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      59 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 218.7  -76.2 ps  S = 245.0 ps  Cin =  2.1 ff  Cout =  20.2 ff  Cmax = 130.0 ff  G =  917  
ABC: Path  2 --      71 : 3    3 sky130_fd_sc_hd__nand3_2  A =  10.01  Df = 350.9  -84.1 ps  S = 103.5 ps  Cin =  4.4 ff  Cout =  11.9 ff  Cmax = 260.0 ff  G =  251  
ABC: Path  3 --      74 : 2    4 sky130_fd_sc_hd__nor2_2   A =   6.26  Df = 504.2 -181.3 ps  S = 145.5 ps  Cin =  4.4 ff  Cout =  11.0 ff  Cmax = 141.9 ff  G =  239  
ABC: Path  4 --      78 : 2    2 sky130_fd_sc_hd__nand2_2  A =   6.26  Df = 575.0 -188.8 ps  S =  56.6 ps  Cin =  4.4 ff  Cout =   7.0 ff  Cmax = 295.7 ff  G =  152  
ABC: Path  5 --      80 : 4    1 sky130_fd_sc_hd__a211oi_2 A =  12.51  Df = 951.8 -237.0 ps  S = 374.2 ps  Cin =  4.4 ff  Cout =  17.6 ff  Cmax =  88.8 ff  G =  405  
ABC: Start-point = pi19 (\tx_inst.u1_tx.acc [4]).  End-point = po1 ($auto$rtlil.cc:2290:MuxGate$1173).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =   113  edge =    267  area =397.05  delay =642.88  lev = 6
ABC: + write_blif <abc-temp-dir>/output.blif 

42.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        1
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

43. Executing SETUNDEF pass (replace undef values with defined constants).

44. Executing HILOMAP pass (mapping to constant drivers).

45. Executing SPLITNETS pass (splitting up multi-bit signals).

46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

47. Executing INSBUF pass (insert buffer cells for connected wires).

48. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

49. Printing statistics.

=== uart ===

   Number of wires:                143
   Number of wire bits:            143
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                140
     sky130_fd_sc_hd__a211oi_2       2
     sky130_fd_sc_hd__a21o_2         3
     sky130_fd_sc_hd__a21oi_2        2
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__a22oi_2        2
     sky130_fd_sc_hd__a31o_2         1
     sky130_fd_sc_hd__a31oi_2        1
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__a41oi_2        1
     sky130_fd_sc_hd__and2_2         1
     sky130_fd_sc_hd__and2b_2        1
     sky130_fd_sc_hd__and3_2         2
     sky130_fd_sc_hd__and4_2         1
     sky130_fd_sc_hd__buf_1          9
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         20
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2       18
     sky130_fd_sc_hd__nand3_2       11
     sky130_fd_sc_hd__nand3b_2       3
     sky130_fd_sc_hd__nor2_2        14
     sky130_fd_sc_hd__nor3_2         6
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o21a_2         1
     sky130_fd_sc_hd__o21ai_2        3
     sky130_fd_sc_hd__o22a_2         2
     sky130_fd_sc_hd__o22ai_2        1
     sky130_fd_sc_hd__o31ai_2        1
     sky130_fd_sc_hd__o41ai_2        1
     sky130_fd_sc_hd__or2_2          1

   Chip area for module '\uart': 1346.291200

50. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_3

51. Executing ABC pass (technology mapping using ABC).

51.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

51.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    7.77 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + map -p -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: + upsize -D 6660.0 
ABC: Current delay (998.62 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     96 ( 20.8 %)   Cap = 11.6 ff (  4.3 %)   Area =      813.28 ( 77.1 %)   Delay =  1078.67 ps  (  7.3 %)               
ABC: Path  0 --      14 : 0    2 pi                       A =   0.00  Df =   5.1   -3.6 ps  S =  16.8 ps  Cin =  0.0 ff  Cout =   3.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      65 : 1    5 sky130_fd_sc_hd__buf_1   A =   3.75  Df = 186.0  -56.6 ps  S = 204.5 ps  Cin =  2.1 ff  Cout =  16.7 ff  Cmax = 130.0 ff  G =  770  
ABC: Path  2 --      77 : 2    1 sky130_fd_sc_hd__or2b_2  A =   8.76  Df = 507.3 -196.0 ps  S =  57.7 ps  Cin =  1.6 ff  Cout =   4.6 ff  Cmax = 312.2 ff  G =  281  
ABC: Path  3 --      80 : 2    5 sky130_fd_sc_hd__nor2_2  A =   6.26  Df = 732.7 -363.9 ps  S = 235.9 ps  Cin =  4.4 ff  Cout =  19.8 ff  Cmax = 141.9 ff  G =  430  
ABC: Path  4 --     105 : 4    1 sky130_fd_sc_hd__a31oi_2 A =  12.51  Df = 854.7 -353.0 ps  S = 140.2 ps  Cin =  4.4 ff  Cout =   4.7 ff  Cmax = 118.1 ff  G =  100  
ABC: Path  5 --     106 : 3    1 sky130_fd_sc_hd__a21oi_2 A =   8.76  Df =1078.7 -345.1 ps  S = 238.9 ps  Cin =  4.6 ff  Cout =  17.6 ff  Cmax = 128.2 ff  G =  386  
ABC: Start-point = pi13 (\tx_inst.u1_tx.acc [0]).  End-point = po11 ($auto$rtlil.cc:2290:MuxGate$1153).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =    96  edge =    228  area =383.89  delay =602.97  lev = 6
ABC: + write_blif <abc-temp-dir>/output.blif 

51.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        4
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

52. Executing SETUNDEF pass (replace undef values with defined constants).

53. Executing HILOMAP pass (mapping to constant drivers).

54. Executing SPLITNETS pass (splitting up multi-bit signals).

55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

56. Executing INSBUF pass (insert buffer cells for connected wires).

57. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

58. Printing statistics.

=== uart ===

   Number of wires:                126
   Number of wire bits:            126
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                123
     sky130_fd_sc_hd__a21oi_2        2
     sky130_fd_sc_hd__a22oi_2        2
     sky130_fd_sc_hd__a31oi_2        4
     sky130_fd_sc_hd__and2_2         2
     sky130_fd_sc_hd__and2b_2        5
     sky130_fd_sc_hd__and4_2         3
     sky130_fd_sc_hd__buf_1          5
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         15
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2        8
     sky130_fd_sc_hd__nand2b_2       2
     sky130_fd_sc_hd__nand3_2       11
     sky130_fd_sc_hd__nand3b_2       2
     sky130_fd_sc_hd__nor2_2         9
     sky130_fd_sc_hd__nor3_2         2
     sky130_fd_sc_hd__nor3b_2        2
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2         8
     sky130_fd_sc_hd__o21ai_2        2
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o22a_2         1
     sky130_fd_sc_hd__o22ai_2        1
     sky130_fd_sc_hd__o2bb2ai_2      1
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__xnor2_2        2
     sky130_fd_sc_hd__xor2_2         4

   Chip area for module '\uart': 1320.016000

59. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_4

60. Executing ABC pass (technology mapping using ABC).

60.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

60.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =    7.77 MB. Time =     0.13 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: Node 127 has dup fanin 124.
ABC: Node 127 has dup fanin 124.
ABC: + upsize -D 6660.0 
ABC: Current delay (2152.99 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     80 ( 33.8 %)   Cap = 10.0 ff (  5.0 %)   Area =      541.77 ( 66.2 %)   Delay =  1946.09 ps  ( 13.8 %)               
ABC: Path  0 --      18 : 0    3 pi                       A =   0.00  Df =  10.7   -7.2 ps  S =  23.4 ps  Cin =  0.0 ff  Cout =   8.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      69 : 4    1 sky130_fd_sc_hd__or4b_2  A =  10.01  Df = 638.6 -465.3 ps  S =  91.2 ps  Cin =  1.5 ff  Cout =   1.6 ff  Cmax = 265.5 ff  G =  102  
ABC: Path  2 --      73 : 4    3 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1305.6-1004.5 ps  S = 133.9 ps  Cin =  1.5 ff  Cout =  11.6 ff  Cmax = 310.4 ff  G =  733  
ABC: Path  3 --      74 : 1    3 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1409.3-1061.4 ps  S =  68.3 ps  Cin =  4.5 ff  Cout =  10.8 ff  Cmax = 331.4 ff  G =  230  
ABC: Path  4 --      89 : 3    4 sky130_fd_sc_hd__and3_2  A =   7.51  Df =1620.9-1050.6 ps  S =  81.3 ps  Cin =  1.5 ff  Cout =  11.1 ff  Cmax = 309.5 ff  G =  710  
ABC: Path  5 --      91 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1678.2-1038.0 ps  S =  48.0 ps  Cin =  4.4 ff  Cout =   5.1 ff  Cmax = 295.7 ff  G =  110  
ABC: Path  6 --      92 : 5    1 sky130_fd_sc_hd__a32o_2  A =  11.26  Df =1946.1  -91.9 ps  S = 123.2 ps  Cin =  2.3 ff  Cout =  17.6 ff  Cmax = 264.6 ff  G =  755  
ABC: Start-point = pi17 (\tx_inst.u1_tx.acc [2]).  End-point = po9 ($auto$rtlil.cc:2290:MuxGate$1157).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =    80  edge =    190  area =541.78  delay =12.00  lev = 12
ABC: + write_blif <abc-temp-dir>/output.blif 

60.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

61. Executing SETUNDEF pass (replace undef values with defined constants).

62. Executing HILOMAP pass (mapping to constant drivers).

63. Executing SPLITNETS pass (splitting up multi-bit signals).

64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

65. Executing INSBUF pass (insert buffer cells for connected wires).

66. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

67. Printing statistics.

=== uart ===

   Number of wires:                110
   Number of wire bits:            110
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                107
     sky130_fd_sc_hd__a211oi_2       1
     sky130_fd_sc_hd__a21o_2         1
     sky130_fd_sc_hd__a21oi_2        2
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__a2bb2o_2       1
     sky130_fd_sc_hd__a31o_2         1
     sky130_fd_sc_hd__a32o_2         3
     sky130_fd_sc_hd__and3_2         3
     sky130_fd_sc_hd__buf_1          5
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         22
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2        7
     sky130_fd_sc_hd__nor2_2         6
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2         5
     sky130_fd_sc_hd__o21ba_2        1
     sky130_fd_sc_hd__o221a_2        2
     sky130_fd_sc_hd__o22a_2         1
     sky130_fd_sc_hd__o32a_2         1
     sky130_fd_sc_hd__or2_2          8
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__or4_2          3
     sky130_fd_sc_hd__or4b_2         1

   Chip area for module '\uart': 1048.505600

68. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_5

69. Executing ABC pass (technology mapping using ABC).

69.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

69.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =    7.77 MB. Time =     0.13 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 6660.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: Node 90 has dup fanin 18.
ABC: Node 90 has dup fanin 73.
ABC: Node 90 has dup fanin 18.
ABC: Node 90 has dup fanin 73.
ABC: Node 127 has dup fanin 121.
ABC: Node 127 has dup fanin 121.
ABC: + upsize -D 6660.0 
ABC: Current delay (2351.39 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     79 ( 32.9 %)   Cap = 10.1 ff (  4.7 %)   Area =      539.27 ( 67.1 %)   Delay =  2002.92 ps  ( 17.7 %)               
ABC: Path  0 --      19 : 0    3 pi                       A =   0.00  Df =  10.7   -7.2 ps  S =  23.4 ps  Cin =  0.0 ff  Cout =   8.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      71 : 4    1 sky130_fd_sc_hd__or4b_2  A =  10.01  Df = 638.6 -465.3 ps  S =  91.2 ps  Cin =  1.5 ff  Cout =   1.6 ff  Cmax = 265.5 ff  G =  102  
ABC: Path  2 --      74 : 4    4 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1310.6-1008.4 ps  S = 137.1 ps  Cin =  1.5 ff  Cout =  11.9 ff  Cmax = 310.4 ff  G =  767  
ABC: Path  3 --      75 : 1    5 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1449.7-1083.7 ps  S = 109.2 ps  Cin =  4.5 ff  Cout =  21.1 ff  Cmax = 331.4 ff  G =  445  
ABC: Path  4 --      88 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1520.0-1080.3 ps  S =  57.3 ps  Cin =  4.4 ff  Cout =   7.1 ff  Cmax = 295.7 ff  G =  155  
ABC: Path  5 --      89 : 1    2 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1574.1-1097.1 ps  S =  41.1 ps  Cin =  4.5 ff  Cout =   7.2 ff  Cmax = 331.4 ff  G =  152  
ABC: Path  6 --      90 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1627.2-1087.3 ps  S =  57.3 ps  Cin =  4.4 ff  Cout =   7.1 ff  Cmax = 295.7 ff  G =  155  
ABC: Path  7 --      91 : 1    3 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1686.0-1104.5 ps  S =  51.3 ps  Cin =  4.5 ff  Cout =   9.6 ff  Cmax = 331.4 ff  G =  204  
ABC: Path  8 --      92 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1736.3-1097.4 ps  S =  47.6 ps  Cin =  4.4 ff  Cout =   5.1 ff  Cmax = 295.7 ff  G =  110  
ABC: Path  9 --      93 : 5    1 sky130_fd_sc_hd__a32o_2  A =  11.26  Df =2002.9  -89.1 ps  S = 123.3 ps  Cin =  2.3 ff  Cout =  17.6 ff  Cmax = 264.6 ff  G =  755  
ABC: Start-point = pi18 (\tx_inst.u1_tx.acc [5]).  End-point = po9 ($auto$rtlil.cc:2290:MuxGate$1157).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =    79  edge =    188  area =539.28  delay =11.00  lev = 11
ABC: + write_blif <abc-temp-dir>/output.blif 

69.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

70. Executing SETUNDEF pass (replace undef values with defined constants).

71. Executing HILOMAP pass (mapping to constant drivers).

72. Executing SPLITNETS pass (splitting up multi-bit signals).

73. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

74. Executing INSBUF pass (insert buffer cells for connected wires).

75. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

76. Printing statistics.

=== uart ===

   Number of wires:                109
   Number of wire bits:            109
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     sky130_fd_sc_hd__a211oi_2       2
     sky130_fd_sc_hd__a21o_2         1
     sky130_fd_sc_hd__a21oi_2        1
     sky130_fd_sc_hd__a22o_2         1
     sky130_fd_sc_hd__a2bb2o_2       1
     sky130_fd_sc_hd__a31o_2         1
     sky130_fd_sc_hd__a32o_2         3
     sky130_fd_sc_hd__and3_2         2
     sky130_fd_sc_hd__buf_1          4
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         22
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__nand2_2        8
     sky130_fd_sc_hd__nor2_2         5
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2         6
     sky130_fd_sc_hd__o221a_2        1
     sky130_fd_sc_hd__o22a_2         1
     sky130_fd_sc_hd__o2bb2a_2       1
     sky130_fd_sc_hd__o32a_2         1
     sky130_fd_sc_hd__or2_2          9
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__or4_2          3
     sky130_fd_sc_hd__or4b_2         1

   Chip area for module '\uart': 1046.003200

77. Executing Verilog backend.
Dumping module `\uart'.
[INFO]: ABC: WireLoad : S_6

78. Executing ABC pass (technology mapping using ABC).

78.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 104 gates and 131 wires to a netlist network with 26 inputs and 30 outputs.

78.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/uart/runs/14-04_14-33/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    7.77 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/uart/runs/14-04_14-33/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + retime -D -D 6660.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: Warning: The choice nodes in the original AIG are removed by strashing.
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 6660.0 
ABC: + buffer -N 5 -S 666.0 
ABC: Node 90 has dup fanin 18.
ABC: Node 90 has dup fanin 73.
ABC: Node 90 has dup fanin 18.
ABC: Node 90 has dup fanin 73.
ABC: Node 128 has dup fanin 122.
ABC: Node 128 has dup fanin 122.
ABC: + upsize -D 6660.0 
ABC: Current delay (2351.39 ps) does not exceed the target delay (6660.00 ps). Upsizing is not performed.
ABC: + dnsize -D 6660.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     78 ( 32.1 %)   Cap = 10.1 ff (  4.5 %)   Area =      534.26 ( 67.9 %)   Delay =  2002.42 ps  ( 17.9 %)               
ABC: Path  0 --      17 : 0    3 pi                       A =   0.00  Df =   9.9   -6.9 ps  S =  22.4 ps  Cin =  0.0 ff  Cout =   7.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      71 : 4    1 sky130_fd_sc_hd__or4b_2  A =  10.01  Df = 638.1 -464.8 ps  S =  91.2 ps  Cin =  1.5 ff  Cout =   1.6 ff  Cmax = 265.5 ff  G =  102  
ABC: Path  2 --      74 : 4    4 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1310.1-1007.9 ps  S = 137.1 ps  Cin =  1.5 ff  Cout =  11.9 ff  Cmax = 310.4 ff  G =  767  
ABC: Path  3 --      75 : 1    5 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1449.2-1083.2 ps  S = 109.2 ps  Cin =  4.5 ff  Cout =  21.1 ff  Cmax = 331.4 ff  G =  445  
ABC: Path  4 --      88 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1519.5-1079.8 ps  S =  57.3 ps  Cin =  4.4 ff  Cout =   7.1 ff  Cmax = 295.7 ff  G =  155  
ABC: Path  5 --      89 : 1    2 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1573.6-1096.6 ps  S =  41.1 ps  Cin =  4.5 ff  Cout =   7.2 ff  Cmax = 331.4 ff  G =  152  
ABC: Path  6 --      90 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1626.7-1086.8 ps  S =  57.3 ps  Cin =  4.4 ff  Cout =   7.1 ff  Cmax = 295.7 ff  G =  155  
ABC: Path  7 --      91 : 1    3 sky130_fd_sc_hd__inv_2   A =   3.75  Df =1685.5-1104.0 ps  S =  51.3 ps  Cin =  4.5 ff  Cout =   9.6 ff  Cmax = 331.4 ff  G =  204  
ABC: Path  8 --      92 : 2    2 sky130_fd_sc_hd__nand2_2 A =   6.26  Df =1735.8-1096.9 ps  S =  47.6 ps  Cin =  4.4 ff  Cout =   5.1 ff  Cmax = 295.7 ff  G =  110  
ABC: Path  9 --      93 : 5    1 sky130_fd_sc_hd__a32o_2  A =  11.26  Df =2002.4  -89.1 ps  S = 123.3 ps  Cin =  2.3 ff  Cout =  17.6 ff  Cmax = 264.6 ff  G =  755  
ABC: Start-point = pi16 (\tx_inst.u1_tx.acc [3]).  End-point = po9 ($auto$rtlil.cc:2290:MuxGate$1157).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   26/   30  lat =    0  nd =    78  edge =    185  area =534.28  delay =11.00  lev = 11
ABC: + write_blif <abc-temp-dir>/output.blif 

78.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:        internal signals:       75
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       30
Removing temp directory.

79. Executing SETUNDEF pass (replace undef values with defined constants).

80. Executing HILOMAP pass (mapping to constant drivers).

81. Executing SPLITNETS pass (splitting up multi-bit signals).

82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 165 unused wires.
<suppressed ~1 debug messages>

83. Executing INSBUF pass (insert buffer cells for connected wires).

84. Executing CHECK pass (checking for obvious problems).
checking module uart..
Warning: Wire uart.\UARTn_TXD is used but has no driver.
Warning: Wire uart.\UARTn_RTS is used but has no driver.
found and reported 2 problems.

85. Printing statistics.

=== uart ===

   Number of wires:                108
   Number of wire bits:            108
   Number of public wires:          25
   Number of public wire bits:      25
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     sky130_fd_sc_hd__a211oi_2       2
     sky130_fd_sc_hd__a21oi_2        1
     sky130_fd_sc_hd__a2bb2o_2       1
     sky130_fd_sc_hd__a31o_2         1
     sky130_fd_sc_hd__a32o_2         3
     sky130_fd_sc_hd__and3_2         2
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__conb_1         1
     sky130_fd_sc_hd__dfxtp_2       21
     sky130_fd_sc_hd__inv_2         22
     sky130_fd_sc_hd__mux2_1         5
     sky130_fd_sc_hd__mux2_2         1
     sky130_fd_sc_hd__nand2_2        7
     sky130_fd_sc_hd__nor2_2         6
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2         6
     sky130_fd_sc_hd__o221a_2        1
     sky130_fd_sc_hd__o22a_2         1
     sky130_fd_sc_hd__o2bb2a_2       1
     sky130_fd_sc_hd__o32a_2         1
     sky130_fd_sc_hd__or2_2         10
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__or4_2          3
     sky130_fd_sc_hd__or4b_2         1

   Chip area for module '\uart': 1040.998400

86. Executing Verilog backend.
Dumping module `\uart'.

Warnings: 2 unique messages, 15 total
End of script. Logfile hash: aa0bb4d0e7, CPU: user 5.15s system 0.12s, MEM: 44.62 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 48% 10x stat (4 sec), 39% 8x abc (3 sec), ...
